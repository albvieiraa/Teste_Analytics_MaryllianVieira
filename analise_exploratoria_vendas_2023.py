# -*- coding: utf-8 -*-
"""analise_exploratoria_vendas_2023.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qe0GYOOu38Wzr0YruMUOxbB-u7pAAKN_

# Programa de Estágio Quod | Teste de Analytics

## Bibliotecas
"""

# Importando bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""### Criando o script"""

# Função para gerar dados
def dados_simulados():
  np.random.seed(42)
  datas = pd.date_range(start='2023-01-01', end='2023-12-31')
  produtos = ['Produto A', 'Produto B', 'Produto C']
  categorias = ['Categoria 1', 'Categoria 2', 'Categoria 3']

  # Criando o dataset
  df_vendas = pd.DataFrame({
      'ID' : range(1, 51),
      'Data': np.random.choice(datas, 50),
      'Produto': np.random.choice(produtos, 50),
      'Categoria': np.random.choice(categorias, 50),
      'Quantidade': np.random.randint(1, 20, 50),
      'Preço': np.random.uniform(10, 100, 50).round(2)
  })
  return df_vendas

# Salvando o dataset como arquivo.csv
dados_simulados().to_csv('dados_simulados.csv', index=False)

"""## Limpeza e Análise dos Dados de Venda"""

# Carregando o dataset
dataset = pd.read_csv('dados_simulados.csv')
dataset.head()

# Criando cópia para alterações
dataset_copia = dataset.copy()

# Verificando informações gerais
dataset_copia.info()

# Conversão da coluna 'data'
dataset_copia['Data'] = pd.to_datetime(dataset_copia['Data'])

# Conferindo valores nulos
dataset_copia.isnull().sum()

# Verificando NaN
dataset_copia.isna().sum()

# Verificando duplicatas
dataset_copia.duplicated().sum()

# Salvando o dataset limpo
dataset_copia.to_csv('data_clean.csv', index=False)

"""## Análise dos Dados"""

data_clean = pd.read_csv('data_clean.csv')
data_clean.head()

# Descrição das variáveis numéricas
data_clean.describe()

# Descrição das variáveis categoricas
data_clean.describe(include='object')

"""### Total de vendas por produto"""

# Total de vendas (quantidade * preço)
total_vendas = data_clean['Total_Vendas'] = data_clean['Quantidade'] * data_clean['Preço']
data_clean.head()

# Vendas por produto
vendas_por_produto = data_clean.groupby('Produto')['Total_Vendas'].sum().sort_values(ascending=False)
vendas_por_produto

# Gráfico do Total de Vendas por Produto
plt.figure(figsize=(10, 6))
sns.barplot(x=vendas_por_produto.index, y=vendas_por_produto.values)
plt.title('Total de Vendas por Produto')
plt.xlabel('Produto')
plt.ylabel('Total de Vendas')

"""### **Comentário:** é possível observar que o **Produto A** foi o mais vendido no ano de 2023.

## Análise Exploratória de Dados de Vendas

### Tedência de Vendas ao Longo do Tempo (Meses)
"""

# Transformar a coluna 'Data' em datetime novamente pois o arquivo CSV não salva assim.
data_clean['Data'] = pd.to_datetime(data_clean['Data'])

# Agrupando por mês
vendas_por_mes = data_clean.groupby(data_clean['Data'].dt.to_period('M'))['Total_Vendas'].sum()
vendas_por_mes

# Gráfico de linha da tedência de vendas ao longo do tempo
plt.figure(figsize=(12, 6))
sns.lineplot(x=vendas_por_mes.index.astype(str), y=vendas_por_mes)
plt.title('Tendência de Vendas ao Longo do Tempo (Meses)')
plt.xlabel('Mês')
plt.ylabel('Total de Vendas')
plt.xticks(rotation=45)
plt.show()

"""**Comentário**: buscando uma análise mais aprofundada, decidi verificar a tendência de vendas por produto."""

# Tendência de vendas mês x produtos
vendas_por_produto_mes = data_clean.groupby([data_clean['Data'].dt.to_period('M'), 'Produto'])['Total_Vendas'].sum().unstack()
vendas_por_produto_mes

vendas_por_produto_mes.isna().sum()

"""**Inferencia:** por ser preenchido com NaN, provavelmente esses produtos não foram vendidos nesses meses. Logo, optei por tratar os valores faltantes por *zero*"""

vendas_por_produto_mes = vendas_por_produto_mes.fillna(0)
vendas_por_produto_mes

# Grafico de Linha do total de vendas por mês
plt.figure(figsize=(12, 6))
# Transformar as colunas (Produto) em linhas e criando novas colunas 'Produto' e 'Total_Vendas'
vendas_por_produto_mes_melted = vendas_por_produto_mes.melt(ignore_index=False, var_name='Produto', value_name='Total_Vendas')
vendas_por_produto_mes_melted = vendas_por_produto_mes_melted.reset_index()
vendas_por_produto_mes_melted['Data'] = vendas_por_produto_mes_melted['Data'].astype(str)

sns.lineplot(data=vendas_por_produto_mes_melted, x='Data', y='Total_Vendas', hue='Produto')
plt.title('Tendência de Vendas ao Longo do Tempo (Meses) x Produto')
plt.xlabel('Mês')
plt.ylabel('Total de Vendas')
plt.xticks(rotation=45)
plt.show()

"""### **Inferências:**

1. Ao analisar o gráfico 'Tendência de Vendas ao Longo do Tempo (Meses)', é possível observar alta volatilidade, podendo indicar uma instabilidade considerável.
2. O maior pico de vendas ocorreu no mês de Novembro e uma baixa nas vendas no mês de outubro.
3. Observando a tendência de vendas por produto, nota-se que tanto os Produtos B e C oscilam bastante durante o ano.
4. Verificando tabela e gráfico, o Produto C não foi vendido em alguns meses do ano (Janeiro, Junho, Agosto, Setembro e Dezembro).

### **Insight 1:**

* A flutuação das vendas pode estar relacionado à sazonalidade dos produtos. Sendo Novembro o mês com maiores vendas, pode estar relacionados à promoções aplicadas durante a Black Friday.

### **Insight 2:**

* Apesar do pico de vendas do Produto C, faz-se necessário realizar um estudo mais profundo sobre relevância desse produto no mercado e retorno financeiro do mesmo. A partir dessas informações, fazer mudanças nas estratégias de marketing ou fazer a retirada do produto.

### **Insight 3:**

* O Produto A apresenta uma tendência de crescimento gradual ao longo do ano, com algumas oscilações. Logo, seria necessário identificar quais campanhas mensais tiveram mais impacto; explorar plataformas digitais para alcançar mais público; e também realizar teste A/B comparando diferentes mensagens sobre o produto para o público.

"""